{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoList","setIsLoading","setSelectedTodoData","todos","setTodos","useEffect","loadTodos","a","fetchedTodos","finally","className","map","todo","id","completed","classNames","title","type","onClick","handleUserChange","TodoFilter","onChange","event","filter","target","value","filteredTodos","placeholder","style","pointerEvents","Loader","TodoModal","selectedTodoData","useState","user","setUser","isLoading","loadUser","pickedUser","href","name","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48c5667e.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { getTodos } from '../../api';\n\ntype Props = {\n  setIsLoading: (condition: boolean) => void;\n  setSelectedTodoData: (data:\n  { userId: number | null; todo: Todo | null }) => void;\n  todos: Todo[] | null;\n  setTodos: (todos: Todo[] | null) => void;\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    setIsLoading, setSelectedTodoData, todos, setTodos,\n  },\n) => {\n  useEffect(() => {\n    setIsLoading(true);\n    const loadTodos = async () => {\n      const fetchedTodos = await getTodos();\n\n      setTodos(fetchedTodos);\n    };\n\n    loadTodos().finally(() => setIsLoading(false));\n  }, [setIsLoading, setTodos]);\n\n  const handleUserChange = (todo: Todo) => {\n    setSelectedTodoData({ userId: todo.userId, todo });\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos?.map(todo => {\n          return (\n            <tr data-cy=\"todo\" className=\"\">\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-success': todo.completed,\n                    'has-text-danger': !todo.completed,\n                  })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleUserChange(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[] | null;\n  setTodos: (todos: Todo[] | null) => void;\n};\n\nexport const TodoFilter = ({ todos, setTodos }: Props) => {\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const filter = event.target.value;\n\n    if (todos) {\n      let filteredTodos = [...todos];\n\n      switch (filter) {\n        case 'all':\n          filteredTodos = [...todos];\n          break;\n        case 'completed':\n          filteredTodos = filteredTodos.filter((todo) => todo.completed);\n          break;\n        case 'active':\n          filteredTodos = filteredTodos.filter((todo) => !todo.completed);\n          break;\n        default:\n          break;\n      }\n\n      setTodos(filteredTodos);\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleFilterChange}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option value=\"active\">\n              Active\n            </option>\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodoData: {\n    userId: number | null;\n    todo: Todo | null;\n  }\n  setSelectedTodoData: (data:\n  { userId: number | null; todo: Todo | null }) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodoData,\n  setSelectedTodoData,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { userId, todo } = selectedTodoData;\n\n  useEffect(() => {\n    const loadUser = async () => {\n      setIsLoading(true);\n      if (userId !== null) {\n        const pickedUser = await getUser(userId);\n\n        setUser(pickedUser);\n      }\n    };\n\n    loadUser().finally(() => setIsLoading(false));\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodoData({ userId: null, todo: null })}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodoData, setSelectedTodoData] = useState<{\n    userId: number | null;\n    todo: Todo | null;\n  }>({ userId: null, todo: null });\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setTodos={setTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                setIsLoading={setIsLoading}\n                setSelectedTodoData={setSelectedTodoData}\n                todos={todos}\n                setTodos={setTodos}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoData.userId && (\n        <TodoModal\n          selectedTodoData={selectedTodoData}\n          setSelectedTodoData={setSelectedTodoData}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}