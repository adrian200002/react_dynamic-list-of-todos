{"version":3,"sources":["api.ts","components/context.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoContext","createContext","TodoProvider","children","useState","isLoading","setIsLoading","userId","todo","selectedTodoData","setSelectedTodoData","todos","setTodos","filteredTodos","setFilteredTodos","query","setQuery","useEffect","loadTodos","a","fetchedTodos","finally","visibleTodos","useMemo","filtered","filter","title","toLocaleLowerCase","includes","value","Provider","useTodoContext","context","useContext","Error","TodoList","className","map","onetodo","classNames","id","completed","type","onClick","handleUserChange","TodoFilter","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","user","setUser","getUser","href","name","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9035966.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import {\n  createContext, useState, useEffect, useContext, ReactNode, useMemo,\n} from 'react';\nimport { Todo } from '../types/Todo';\nimport { getTodos } from '../api';\n\nconst TodoContext = createContext<{\n  todos: Todo[] | null;\n  visibleTodos: Todo[];\n  filteredTodos: Todo[] | null;\n  query: string;\n  setQuery:(str: string) => void;\n  setFilteredTodos: (todos: Todo[]) => void;\n  isLoading: boolean;\n  selectedTodoData: {\n    userId: number | null;\n    todo: Todo | null;\n  }\n  setSelectedTodoData: (data:\n  { userId: number | null; todo: Todo | null }) => void;\n} | null>(null);\n\nexport const TodoProvider: React.FC<{ children: ReactNode }> = (\n  { children },\n) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodoData, setSelectedTodoData] = useState<{\n    userId: number | null;\n    todo: Todo | null;\n  }>({ userId: null, todo: null });\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[] | null>(null);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    const loadTodos = async () => {\n      const fetchedTodos = await getTodos();\n\n      setTodos(fetchedTodos);\n      setFilteredTodos(fetchedTodos);\n    };\n\n    loadTodos().finally(() => setIsLoading(false));\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    if (!filteredTodos) {\n      return [];\n    }\n\n    let filtered = [...filteredTodos];\n\n    filtered = filtered.filter(todo => todo.title\n      .toLocaleLowerCase().includes(query.toLocaleLowerCase()));\n\n    return filtered;\n  }, [filteredTodos, query]);\n\n  const value = useMemo(() => {\n    return {\n      todos,\n      visibleTodos,\n      filteredTodos,\n      query,\n      setQuery,\n      setFilteredTodos,\n      isLoading,\n      selectedTodoData,\n      setSelectedTodoData,\n    };\n  }, [todos, visibleTodos, filteredTodos, query, isLoading, selectedTodoData]);\n\n  return (\n    <TodoContext.Provider value={value}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n\nexport const useTodoContext = () => {\n  const context = useContext(TodoContext);\n\n  if (!context) {\n    throw new Error('No context provided');\n  }\n\n  return context;\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { useTodoContext } from '../context';\n\nexport const TodoList: React.FC = () => {\n  const {\n    setSelectedTodoData,\n    visibleTodos,\n    selectedTodoData,\n  } = useTodoContext();\n\n  const handleUserChange = (todo: Todo) => {\n    setSelectedTodoData({ userId: todo.userId, todo });\n  };\n\n  const { todo } = selectedTodoData;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos?.map(onetodo => {\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': onetodo.id === todo?.id,\n              })}\n            >\n              <td className=\"is-vcentered\">{onetodo.id}</td>\n              <td className=\"is-vcentered\">\n                {onetodo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-success': onetodo.completed,\n                    'has-text-danger': !onetodo.completed,\n                  })}\n                >\n                  {onetodo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleUserChange(onetodo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames({\n                      'far fa-eye': onetodo.id !== todo?.id,\n                      'far fa-eye-slash': onetodo.id === todo?.id,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { ChangeEvent } from 'react';\nimport { useTodoContext } from '../context';\n\nexport const TodoFilter = () => {\n  const {\n    todos, setFilteredTodos, query, setQuery,\n  } = useTodoContext();\n\n  const handleQueryChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const filter = event.target.value;\n\n    if (!todos) {\n      return;\n    }\n\n    let filtered = [...todos];\n\n    switch (filter) {\n      case 'all':\n        setFilteredTodos(filtered);\n        break;\n      case 'completed':\n        filtered = filtered.filter((todo) => todo.completed);\n        break;\n      case 'active':\n        filtered = filtered.filter((todo) => !todo.completed);\n        break;\n      default:\n        break;\n    }\n\n    setFilteredTodos(filtered);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleFilterChange}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option value=\"active\">\n              Active\n            </option>\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { useTodoContext } from '../context';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const { setSelectedTodoData, selectedTodoData } = useTodoContext();\n\n  const { userId, todo } = selectedTodoData;\n\n  useEffect(() => {\n    const loadUser = () => {\n      if (userId !== null) {\n        getUser(userId).then(setUser)\n          .finally(() => setIsLoading(false));\n      }\n    };\n\n    loadUser();\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodoData({ userId: null, todo: null })}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useTodoContext } from './components/context';\n\nexport const App: React.FC = () => {\n  const { isLoading, selectedTodoData } = useTodoContext();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoData.userId && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoProvider } from './components/context';\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}